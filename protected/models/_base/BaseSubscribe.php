<?php

/**
 * This is the model base class for the table "user_subscribe".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "User".
 *
 * Columns in table "user_subscribe" available as properties of the model,
 * followed by relations of table "user_subscribe" available as properties of the model.
 *
 * @property integer $subscribe_user_id
 * @property integer $item_id
 * @property integer $post
 * @property integer $image
 * @property integer $video
 * @property integer $audio
 * @property integer $comment
 * @property string $update_datetime
 * @property string $create_datetime
 *
 * @property User $ownerUser
 * @property User $subscribeUser
 */
abstract class BaseSubscribe extends MyAR {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'subscribe';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'SubscribesUser|SubscribesUsers', $n);
	}

	public static function representingColumn() {
		return 'update_datetime';
	}

	public function rules() {
		return array(
			array('subscribe_user_id, item_id', 'required'),
			array('subscribe_user_id, item_id, post, image, video, audio, comment', 'numerical', 'integerOnly'=>true),
			array('update_datetime, create_datetime', 'safe'),
			array('post, image, video, audio, comment, update_datetime, create_datetime', 'default', 'setOnEmpty' => true, 'value' => null),
			array('subscribe_user_id, item_id, post, image, video, audio, comment, update_datetime, create_datetime', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'ownerUser' => array(self::BELONGS_TO, 'User', 'item_id'),
			'subscribeUser' => array(self::BELONGS_TO, 'User', 'subscribe_user_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'subscribe_user_id' => null,
			'item_id' => null,
			'post' => Yii::t('app', 'Post'),
			'image' => Yii::t('app', 'Image'),
			'video' => Yii::t('app', 'Video'),
			'audio' => Yii::t('app', 'Audio'),
			'comment' => Yii::t('app', 'Comment'),
			'update_datetime' => Yii::t('app', 'Update Datetime'),
			'create_datetime' => Yii::t('app', 'Create Datetime'),
			'ownerUser' => null,
			'subscribeUser' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('subscribe_user_id', $this->subscribe_user_id);
		$criteria->compare('item_id', $this->item_id);
		$criteria->compare('post', $this->post);
		$criteria->compare('image', $this->image);
		$criteria->compare('video', $this->video);
		$criteria->compare('audio', $this->audio);
		$criteria->compare('comment', $this->comment);
		$criteria->compare('update_datetime', $this->update_datetime, true);
		$criteria->compare('create_datetime', $this->create_datetime, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}